
comm.c.obj:
00000000 r $d
00000024 t $d
00000000 r $d
00000044 t $d
00000000 r $d
00000050 t $d
00000000 r $d
00000034 t $d
00000000 r $d
00000028 t $d
00000004 t $d
00000008 t $d
00000008 t $d
00000000 b $d
00000000 b $d
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 b data_received
00000001 T get_received_data
         U gpio_init
         U gpio_set_function
         U gpio_set_pulls
         U i2c0_inst
         U i2c1_inst
         U i2c_init
         U i2c_slave_init
         U i2c_write_blocking
00000001 T init_master
00000001 T init_slave
00000000 b mcu_received_data
         U printf
         U puts
00000001 T read_data
00000001 T received_data
00000001 T send_data
00000001 t slave_handler
00000001 T there_is_data

i2c.c.obj:
00000014 t $d
000000b8 t $d
00000040 t $d
0000003c t $d
00000000 d $d
00000000 d $d
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
         U __aeabi_uidiv
         U clock_get_hz
00000000 D i2c0_inst
00000000 D i2c1_inst
00000001 T i2c_deinit
00000001 T i2c_init
00000001 T i2c_read_blocking
00000001 t i2c_read_blocking_internal
00000001 T i2c_read_blocking_until
00000001 T i2c_read_timeout_per_char_us
00000001 T i2c_set_baudrate
00000001 T i2c_set_slave_mode
00000001 T i2c_write_blocking
00000001 t i2c_write_blocking_internal
00000001 T i2c_write_blocking_until
00000001 T i2c_write_timeout_per_char_us
         U init_per_iteration_timeout_us
         U init_single_timeout_until

platform.c.obj:
0000000c t $d
00000000 t $t
00000000 t $t
00000001 T rp2040_chip_version
00000001 T running_on_fpga

claim.c.obj:
00000014 t $d
00000010 t $d
00000040 t $d
00000084 t $d
00000034 t $d
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000001 T hw_claim_clear
00000001 T hw_claim_lock
00000001 T hw_claim_or_assert
00000001 T hw_claim_unlock
00000001 T hw_claim_unused_from_range
00000001 T hw_is_claimed
         U panic

sync.c.obj:
00000014 t $d
00000014 t $d
00000014 t $d
00000000 r $d
00000010 t $d
0000003c t $d
0000001c t $d
00000000 r $d
0000001c t $d
00000010 t $d
00000000 b $d
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 b claimed
         U hw_claim_clear
         U hw_claim_or_assert
         U hw_claim_unused_from_range
         U hw_is_claimed
00000001 T next_striped_spin_lock_num
00000001 T spin_lock_claim
00000001 T spin_lock_claim_mask
00000001 T spin_lock_claim_unused
00000001 T spin_lock_init
00000001 T spin_lock_is_claimed
00000001 T spin_locks_reset
00000001 T spin_lock_unclaim
00000000 d striped_spin_lock_num

time.c.obj:
00000030 t $d
0000002c t $d
00000000 r $d
0000002c t $d
000000fc t $d
0000019c t $d
00000054 t $d
00000004 t $d
00000064 t $d
00000064 t $d
0000003c t $d
0000016c t $d
00000110 t $d
000001d8 t $d
00000030 t $d
000000b4 t $d
000000c8 t $d
000000d8 t $d
000000d4 t $d
00000000 b $d
00000000 d $d
00000000 b $d
00000000 b $d
00000000 b $d
00000000 d $d
00000000 b $d
00000000 r $d
00000000 r $d
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000001 t add_alarm_under_lock.isra.0
         U __aeabi_lmul
00000001 T alarm_pool_add_alarm_at
00000001 T alarm_pool_add_alarm_at_force_in_context
00000001 T alarm_pool_add_repeating_timer_us
00000001 t alarm_pool_alarm_callback
00000001 T alarm_pool_cancel_alarm
00000001 T alarm_pool_core_num
00000001 T alarm_pool_create
00000001 T alarm_pool_create_with_unused_hardware_alarm
00000001 T alarm_pool_destroy
00000001 T alarm_pool_dump
00000001 t alarm_pool_dump_key
00000001 T alarm_pool_get_default
00000001 T alarm_pool_hardware_alarm_num
00000001 T alarm_pool_init_default
00000000 R at_the_end_of_time
00000001 T best_effort_wfe_or_timeout
         U busy_wait_until
         U calloc
00000001 T cancel_repeating_timer
00000000 d default_alarm_pool
00000000 b default_alarm_pool_entries
00000000 b default_alarm_pool_entry_ids_high
00000000 d default_alarm_pool_heap
00000000 b default_alarm_pool_heap_nodes
         U free
         U hardware_alarm_cancel
         U hardware_alarm_claim
         U hardware_alarm_claim_unused
         U hardware_alarm_force_irq
         U hardware_alarm_set_callback
         U hardware_alarm_set_target
         U hardware_alarm_unclaim
         U lock_init
         U malloc
         U next_striped_spin_lock_num
00000000 R nil_time
         U ph_create
         U ph_destroy
         U ph_dump
         U ph_post_alloc_init
         U ph_remove_and_free_node
         U ph_remove_head
00000000 b pools
         U printf
00000001 t repeating_timer_callback
00000001 T sleep_ms
00000000 b sleep_notifier
00000001 T sleep_until
00000001 t sleep_until_callback
00000001 T sleep_us
00000001 T timer_pool_entry_comparator
         U time_us_64

timeout_helper.c.obj:
00000020 t $d
0000003c t $d
00000008 t $d
00000028 t $d
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000001 t check_per_iteration_timeout_us
00000001 t check_single_timeout_us
00000001 T init_per_iteration_timeout_us
00000001 T init_single_timeout_until
         U time_us_64

timer.c.obj:
000000a0 t $d
00000000 r $d
00000010 t $d
00000010 t $d
00000010 t $d
00000000 r $d
0000001c t $d
00000010 t $d
00000078 t $d
00000064 t $d
00000090 t $d
0000001c t $d
00000078 t $d
000000bc t $d
00000030 t $d
00000030 t $d
00000000 b $d
00000000 b $d
00000000 b $d
00000000 b $d
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
         U __aeabi_lmul
00000000 b alarm_callbacks
00000001 T busy_wait_ms
00000001 T busy_wait_until
00000001 T busy_wait_us
00000001 T busy_wait_us_32
00000000 b claimed
00000001 T hardware_alarm_cancel
00000001 T hardware_alarm_claim
00000001 T hardware_alarm_claim_unused
00000001 T hardware_alarm_force_irq
00000001 t hardware_alarm_irq_handler
00000001 T hardware_alarm_is_claimed
00000001 T hardware_alarm_set_callback
00000001 T hardware_alarm_set_target
00000001 T hardware_alarm_unclaim
         U hw_claim_clear
         U hw_claim_or_assert
         U hw_claim_unused_from_range
         U hw_is_claimed
         U irq_get_vtable_handler
         U irq_remove_handler
         U irq_set_enabled
         U irq_set_exclusive_handler
00000000 b target_hi
00000000 b timer_callbacks_pending
00000001 T time_us_64

irq.c.obj:
00000018 t $d
00000014 t $d
00000014 t $d
0000000c t $d
00000024 t $d
0000000c t $d
00000048 t $d
00000040 t $d
000001c4 t $d
00000184 t $d
00000024 t $d
0000001c t $d
00000098 t $d
00000018 t $d
00000000 r $d
00000010 t $d
00000010 t $d
00000000 r $d
00000024 t $d
00000010 t $d
00000000 b $d
00000000 b $d
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
         U hard_assertion_failure
         U hw_claim_clear
         U hw_claim_or_assert
         U hw_claim_unused_from_range
         U hw_is_claimed
00000001 T irq_add_shared_handler
00000001 T irq_add_tail_to_free_list
00000001 T irq_get_exclusive_handler
00000001 T irq_get_priority
00000001 T irq_get_vtable_handler
00000000 b irq_hander_chain_free_slot_head
         U irq_handler_chain_first_slot
         U irq_handler_chain_remove_tail
         U irq_handler_chain_slots
00000001 T irq_has_shared_handler
00000001 T irq_init_priorities
00000001 T irq_is_enabled
00000001 T irq_remove_handler
00000001 T irq_set_enabled
00000001 T irq_set_exclusive_handler
00000001 T irq_set_mask_enabled
00000001 T irq_set_pending
00000001 T irq_set_priority
         U __unhandled_user_irq
00000001 T user_irq_claim
00000000 b user_irq_claimed
00000001 T user_irq_claim_unused
00000001 T user_irq_is_claimed
00000001 T user_irq_unclaim

irq_handler_chain.S.obj:
00000000 d $d
00000044 d $d
00000030 d $t
         U irq_add_tail_to_free_list
00000030 D irq_handler_chain_first_slot
0000003a D irq_handler_chain_remove_tail
00000000 D irq_handler_chain_slots
00000005 a next_slot_number

sem.c.obj:
00000078 t $d
0000006c t $d
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
         U __aeabi_lmul
         U best_effort_wfe_or_timeout
         U lock_init
         U next_striped_spin_lock_num
00000001 T sem_acquire_blocking
00000001 T sem_acquire_block_until
00000001 T sem_acquire_timeout_ms
00000001 T sem_acquire_timeout_us
00000001 T sem_available
00000001 T sem_init
00000001 T sem_release
00000001 T sem_reset
00000001 T sem_try_acquire
         U time_us_64

lock_core.c.obj:
0000000c t $d
00000000 t $t
00000001 T lock_init

mutex.c.obj:
00000088 t $d
00000094 t $d
00000078 t $d
00000088 t $d
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
         U __aeabi_lmul
         U best_effort_wfe_or_timeout
         U lock_init
00000001 T mutex_enter_blocking
00000001 T mutex_enter_block_until
00000001 T mutex_enter_timeout_ms
00000001 T mutex_enter_timeout_us
00000001 T mutex_exit
00000001 T mutex_init
00000001 T mutex_try_enter
00000001 T mutex_try_enter_block_until
         U next_striped_spin_lock_num
00000001 T recursive_mutex_enter_blocking
00000001 T recursive_mutex_enter_block_until
00000001 T recursive_mutex_enter_timeout_ms
00000001 T recursive_mutex_enter_timeout_us
00000001 T recursive_mutex_exit
00000001 T recursive_mutex_init
00000001 T recursive_mutex_try_enter
         U time_us_64

critical_section.c.obj:
00000018 t $d
00000010 t $d
00000018 t $d
00000000 t $t
00000000 t $t
00000000 t $t
00000001 T critical_section_deinit
00000001 T critical_section_init
00000001 T critical_section_init_with_lock_num
         U spin_lock_claim_unused
         U spin_lock_unclaim

datetime.c.obj:
00000000 r $d
00000048 t $d
00000000 r $d
00000000 r $d
00000000 r $d
00000000 t $t
00000000 r DATETIME_DOWS
00000000 r DATETIME_MONTHS
00000001 T datetime_to_str
         U snprintf

pheap.c.obj:
00000000 r $d
000000a8 t $d
00000000 r $d
0000038c t $d
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
         U calloc
         U free
00000001 T ph_clear
00000001 T ph_create
00000001 T ph_destroy
00000001 T ph_dump
00000001 t ph_dump_node
00000001 t ph_merge_nodes
00000001 T ph_merge_two_pass
00000001 T ph_post_alloc_init
00000001 T ph_remove_and_free_node
00000001 t ph_remove_any_head
00000001 T ph_remove_head
         U printf
         U putchar

queue.c.obj:
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
         U calloc
         U free
         U lock_init
         U memcpy
00000001 T queue_add_blocking
00000001 T queue_free
00000001 T queue_init_with_spinlock
00000001 T queue_peek_blocking
00000001 T queue_remove_blocking
00000001 T queue_try_add
00000001 T queue_try_peek
00000001 T queue_try_remove

clocks.c.obj:
0000008c t $d
00000024 t $d
0000010c t $d
00000240 t $d
00000008 t $d
00000008 t $d
00000040 t $d
00000028 t $d
0000004c t $d
00000104 t $d
00000000 r $d
00000000 b $d
00000000 b $d
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
         U __aeabi_uidiv
         U __aeabi_uldivmod
00000001 T clock_configure
00000001 T clock_configure_gpin
00000001 T clock_get_hz
00000001 T clock_gpio_init_int_frac
00000001 T clocks_enable_resus
00000001 T clock_set_reported_hz
00000001 T clocks_init
00000001 t clocks_irq_handler
00000001 T clock_stop
00000000 b configured_freq
00000001 T frequency_count_khz
00000000 r gpin0_src
         U gpio_set_function
         U irq_set_enabled
         U irq_set_exclusive_handler
         U pll_init
00000000 b _resus_callback
         U running_on_fpga
         U watchdog_start_tick
         U xosc_init

gpio.c.obj:
00000254 t $d
00000020 t $d
00000028 t $d
00000010 t $d
00000020 t $d
00000020 t $d
00000020 t $d
00000020 t $d
00000020 t $d
00000024 t $d
00000010 t $d
0000001c t $d
00000010 t $d
0000001c t $d
00000010 t $d
0000004c t $d
000000b4 t $d
00000038 t $d
00000040 t $d
00000034 t $d
0000001c t $d
00000038 t $d
00000018 t $d
00000074 t $d
00000024 t $d
00000034 t $d
00000028 t $d
00000060 t $d
00000000 b $d
00000000 b $d
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 b callbacks
00000001 T gpio_acknowledge_irq
00000001 T gpio_add_raw_irq_handler_masked
00000001 T gpio_add_raw_irq_handler_with_order_priority_masked
00000001 T gpio_debug_pins_init
00000001 t gpio_default_irq_handler
00000001 T gpio_deinit
00000001 T gpio_get_drive_strength
00000001 T gpio_get_function
00000001 T gpio_get_pad
00000001 T gpio_get_slew_rate
00000001 T gpio_init
00000001 T gpio_init_mask
00000001 T gpio_is_input_hysteresis_enabled
00000001 T gpio_remove_raw_irq_handler_masked
00000001 T gpio_set_dormant_irq_enabled
00000001 T gpio_set_drive_strength
00000001 T gpio_set_function
00000001 T gpio_set_inover
00000001 T gpio_set_input_enabled
00000001 T gpio_set_input_hysteresis_enabled
00000001 T gpio_set_irq_callback
00000001 T gpio_set_irq_enabled
00000001 T gpio_set_irq_enabled_with_callback
00000001 T gpio_set_irqover
00000001 T gpio_set_oeover
00000001 T gpio_set_outover
00000001 T gpio_set_pulls
00000001 T gpio_set_slew_rate
         U hard_assertion_failure
         U irq_add_shared_handler
         U irq_remove_handler
         U irq_set_enabled
00000000 b raw_irq_mask

pll.c.obj:
00000090 t $d
00000000 t $t
00000000 t $t
         U __aeabi_uidiv
00000001 T pll_deinit
00000001 T pll_init

vreg.c.obj:
00000014 t $d
00000000 t $t
00000001 T vreg_set_voltage

watchdog.c.obj:
0000000c t $d
0000000c t $d
0000000c t $d
00000060 t $d
00000068 t $d
00000078 t $d
0000000c t $d
0000001c t $d
00000000 b $d
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 b load_value
00000001 T watchdog_caused_reboot
00000001 T _watchdog_enable
00000001 T watchdog_enable
00000001 T watchdog_enable_caused_reboot
00000001 T watchdog_get_count
00000001 T watchdog_reboot
00000001 T watchdog_start_tick
00000001 T watchdog_update

xosc.c.obj:
0000001c t $d
00000018 t $d
00000010 t $d
00000000 t $t
00000000 t $t
00000000 t $t
00000001 T xosc_disable
00000001 T xosc_dormant
00000001 T xosc_init

i2c_slave.c.obj:
00000098 t $d
00000038 t $d
0000003c t $d
00000000 b $d
00000000 t $t
00000000 t $t
00000000 t $t
         U i2c0_inst
         U i2c1_inst
         U i2c_set_slave_mode
00000001 T i2c_slave_deinit
00000001 T i2c_slave_init
00000001 t i2c_slave_irq_handler
00000000 b i2c_slaves
         U irq_remove_handler
         U irq_set_enabled
         U irq_set_exclusive_handler

stdlib.c.obj:
00000038 t $d
0000006c t $d
00000258 t $d
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
         U __aeabi_uidiv
         U __aeabi_uidivmod
00000001 T check_sys_clock_khz
         U clock_configure
         U pll_deinit
         U pll_init
         U running_on_fpga
00000001 T set_sys_clock_48mhz
00000001 T set_sys_clock_pll
00000001 T setup_default_uart
         U stdio_uart_init

uart.c.obj:
00000164 t $d
0000001c t $d
000000a4 t $d
00000074 t $d
00000058 t $d
00000058 t $d
00000020 t $d
00000020 t $d
00000000 b $d
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
         U __aeabi_uidiv
         U busy_wait_us
         U clock_get_hz
00000000 B uart_char_to_line_feed
00000001 T uart_deinit
00000001 T uart_init
00000001 T uart_is_readable_within_us
00000001 T uart_set_baudrate
00000001 T uart_set_break
00000001 T uart_set_fifo_enabled
00000001 T uart_set_format
00000001 T uart_set_translate_crlf

divider.S.obj:
00000010 t $d
00000010 t $d
00000008 t $d
00000008 t $d
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t hw_divider_divmod_return
00000001 T hw_divider_divmod_s32
00000001 T hw_divider_divmod_u32
00000001 T hw_divider_restore_state
00000001 T hw_divider_save_state

runtime.c.obj:
00000030 t $d
000000b4 t $d
00000028 t $d
00000028 t $d
00000058 t $d
00000020 t $d
00000000 r $d
0000002c t $d
00000000 r $d
00000028 t $d
00000000 r $d
00000008 t $d
00000000 r $d
00000008 t $d
00000000 b $d
00000000 b $d
00000000 d $d
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
         U __aeabi_ldivmod
         U __aeabi_uldivmod
         U alarm_pool_init_default
00000001 T __assert_func
         U clocks_init
         U end
00000000 b epoch_time_us_since_boot
00000001 W _exit
00000001 T exit
00000001 W _getpid
00000001 W _gettimeofday
00000001 T hard_assertion_failure
00000000 b heap_end.0
         U __init_array_end
         U __init_array_start
         U irq_init_priorities
00000001 W _kill
         U memcpy
         U __mutex_array_end
         U __mutex_array_start
         U mutex_init
00000001 T panic
00000001 T panic_unsupported
         U __preinit_array_end
         U __preinit_array_start
         U puts
00000000 D ram_vector_table
         U recursive_mutex_init
00000001 T runtime_init
00000001 T runtime_install_stack_guard
00000001 W _sbrk
00000001 W settimeofday
         U spin_locks_reset
         U __StackLimit
00000001 W _times
         U time_us_64
         U weak_raw_printf
         U weak_raw_vprintf

printf.c.obj:
00000000 r $d
00000348 t $d
000004a4 t $d
00000238 t $d
0000051c t $d
00000000 r $d
0000034c t $d
0000076c t $d
00000028 t $d
00000024 t $d
00000018 t $d
00000020 t $d
00000038 t $d
00000028 t $d
00000000 r $d
00000000 b $d
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
0000036c t $t
00000000 t $t
00000244 t $t
00000000 t $t
00000364 t $t
00000770 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
         U __aeabi_d2iz
         U __aeabi_d2uiz
         U __aeabi_dadd
         U __aeabi_dcmpge
         U __aeabi_dcmpgt
         U __aeabi_dcmple
         U __aeabi_dcmplt
         U __aeabi_dcmpun
         U __aeabi_ddiv
         U __aeabi_dmul
         U __aeabi_dsub
         U __aeabi_i2d
         U __aeabi_idiv
         U __aeabi_idivmod
         U __aeabi_ui2d
         U __aeabi_uidiv
         U __aeabi_uidivmod
         U __aeabi_uldivmod
00000001 t _etoa
00000001 t _ftoa
00000000 b lazy_vsnprintf
00000001 t _ntoa_format
00000001 t _out_buffer
00000001 t _out_char
00000001 t _out_fct
00000001 t _out_null
00000001 t _out_rev
00000000 r pow10.0
         U putchar
         U puts
00000001 T vfctprintf
00000001 t _vsnprintf
00000001 T weak_raw_printf
00000001 T weak_raw_vprintf
00000001 T __wrap_snprintf
00000001 T __wrap_sprintf
00000001 T __wrap_vsnprintf

bit_ops_aeabi.S.obj:
00000000 d $d
00000000 d $d
00000014 t $d
00000006 t $d
00000008 t $d
00000006 t $d
00000008 t $d
00000014 t $d
00000014 t $d
00000014 t $d
00000006 t $d
00000008 t $d
00000006 t $d
00000008 t $d
00000006 t $d
00000008 t $d
00000008 t $d
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 D aeabi_bits_funcs
00000010 D aeabi_bits_funcs_end
00000001 t __aeabi_bits_init
00000004 a BITS_FUNC_COUNT
00000004 a CLZ32
00000008 a CTZ32
00000000 a POPCOUNT32
00000001 T __rev
00000001 T reverse32
0000000c a REVERSE32
00000001 T __revl
00000001 T __revll
         U rom_funcs_lookup
00000001 T __wrap___clz
00000001 T __wrap___clzdi2
00000001 T __wrap___clzl
00000001 T __wrap___clzll
00000001 T __wrap___clzsi2
00000001 T __wrap___ctzdi2
00000001 T __wrap___ctzsi2
00000001 T __wrap___popcountdi2
00000001 T __wrap___popcountsi2

bootrom.c.obj:
00000000 t $t
00000000 t $t
00000000 t $t
00000001 T rom_data_lookup
00000001 T rom_func_lookup
00000001 T rom_funcs_lookup

divider.S.obj:
0000012c t $d
0000018c t $d
0000024e t $d
00000250 t $d
0000041a t $d
0000041c t $d
00000048 t $d
0000004c t $d
00000000 t $t
00000000 t $t
00000000 t $t
00000134 t $t
00000190 t $t
00000258 t $t
00000000 t $t
00000000 t $t
         U __aeabi_idiv0
         U __aeabi_ldiv0
00000001 T divmod_s32s32
00000035 T divmod_s32s32_savestate
00000009 T divmod_s32s32_unsafe
00000001 T divmod_s64s64
00000001 T divmod_s64s64_rem
00000010 t divmod_s64s64_savestate
00000061 T divmod_s64s64_unsafe
00000001 T divmod_u32u32
00000031 T divmod_u32u32_savestate
00000009 T divmod_u32u32_unsafe
00000031 T divmod_u64u64
00000001 T divmod_u64u64_rem
00000041 T divmod_u64u64_savestate
000000e9 T divmod_u64u64_unsafe
00000001 T div_s32s32
00000001 T div_s64s64
00000001 T div_u32u32
00000031 T div_u64u64
00000074 t l40_1
00000080 t l41_1
00000088 t l42_1
000000bc t l43_1
000000c8 t l44_1
000000d2 t l45_1
000000da t l46_1
000000e6 t l47_1
00000260 t last0
000003b4 t last1
00000002 a SIO_DIV_CSR_DIRTY_SHIFT_FOR_CARRY
00000001 a SIO_DIV_CSR_READY_SHIFT_FOR_CARRY
00000112 t udiv0
00000001 T __wrap___aeabi_idiv
00000001 T __wrap___aeabi_idivmod
00000001 T __wrap___aeabi_ldivmod
00000001 T __wrap___aeabi_uidiv
00000001 T __wrap___aeabi_uidivmod
00000031 T __wrap___aeabi_uldivmod
00000134 t y64
00000190 t y64_x32
000002ba t y64_x48
000003c4 t y64_x64

double_aeabi.S.obj:
00000000 d $d
00000012 t $d
00000024 t $d
00000042 t $d
00000072 t $d
0000000c t $d
0000000c t $d
0000000c t $d
0000000c t $d
0000000c t $d
0000000c t $d
0000001e t $d
0000000c t $d
0000000c t $d
0000000c t $d
0000000c t $d
0000000c t $d
0000000c t $d
0000000c t $d
0000000c t $d
0000000c t $d
0000000c t $d
00000016 t $d
00000016 t $d
00000030 t $d
00000022 t $d
0000000c t $d
0000000c t $d
0000000c t $d
00000014 t $d
00000014 t $d
00000014 t $d
00000052 t $d
00000054 t $d
00000086 t $d
00000088 t $d
00000028 t $d
00000028 t $d
0000000c t $d
00000014 t $d
00000014 t $d
00000014 t $d
00000014 t $d
00000014 t $d
00000014 t $d
00000014 t $d
00000014 t $d
00000014 t $d
00000014 t $d
00000014 t $d
00000024 t $d
00000014 t $d
00000014 t $d
00000014 t $d
00000030 t $d
00000014 t $d
00000066 t $d
00000068 t $d
00000078 t $d
00000000 t $t
00000000 t $t
00000000 t $t
00000018 t $t
0000002a t $t
00000048 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000012 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
0000001c t $t
00000000 t $t
0000001c t $t
00000000 t $t
00000036 t $t
00000000 t $t
00000028 t $t
00000000 t $t
00000000 t $t
00000000 t $t
         U __aeabi_cdcmpeq
         U __aeabi_cdcmple
         U __aeabi_cdrcmple
00000012 t __aeabi_dfcmple_guts
         U __aeabi_double_init
         U dadd_shim
         U datan2_shim
         U dcos_shim
00000066 t ddiv_dsub_nan_helper
00000048 t ddiv_save_state
         U ddiv_shim
00000036 t ddiv_shim_call
         U dexp_shim
         U dln_shim
         U dmul_shim
00000001 T double2fix
00000001 T double2fix64
         U double2fix64_shim
         U double2fix_shim
         U double2float_shim
00000001 T double2int
00000001 T double2int64
         U double2int64_shim
00000001 T double2int64_z
         U double2int_shim
00000001 T double2int_z
00000001 T double2ufix
00000001 T double2ufix64
         U double2ufix64_shim
         U double2ufix_shim
00000001 T double2uint
         U double2uint64_shim
         U double2uint_shim
         U dsincos_shim
0000004f t dsincos_shim_v2
         U dsin_shim
         U dsqrt_shim
         U dsub_shim
00000046 t dtan_angle_out_of_range
0000000a t dtan_in_range
00000028 t dtan_save_state
         U dtan_shim
00000016 t dtan_shim_call
00000001 T fix2double
         U fix2double_shim
00000001 T fix642double
         U fix642double_shim
         U int642double_shim
00000001 T pop_r8_r11
00000001 T push_r8_r11
         U remainder
         U sd_table
         U sf_clz_func
00000037 t sincos_shim_bootstrap
00000001 T sincostan_remainder
00000002 a SIO_DIV_CSR_DIRTY_SHIFT_FOR_CARRY
00000001 a SIO_DIV_CSR_READY_SHIFT_FOR_CARRY
00000001 T ufix2double
         U ufix2double_shim
00000013 T ufix642double
         U ufix642double_shim
         U uint2double_shim
         U uint642double_shim
00000077 t v2_rom_dcos_finish
0000006f t v2_rom_dsincos_internal
0000007f t v2_rom_dsin_finish
00000011 T __wrap___aeabi_cdcmpeq
00000011 T __wrap___aeabi_cdcmple
00000001 T __wrap___aeabi_cdrcmple
00000001 T __wrap___aeabi_d2f
00000001 T __wrap___aeabi_d2iz
00000001 T __wrap___aeabi_d2lz
00000001 T __wrap___aeabi_d2uiz
00000001 T __wrap___aeabi_d2ulz
00000019 T __wrap___aeabi_dadd
00000001 T __wrap___aeabi_dcmpeq
00000001 T __wrap___aeabi_dcmpge
00000001 T __wrap___aeabi_dcmpgt
00000001 T __wrap___aeabi_dcmple
00000001 T __wrap___aeabi_dcmplt
00000001 T __wrap___aeabi_dcmpun
0000002b T __wrap___aeabi_ddiv
00000067 T __wrap___aeabi_dmul
00000001 T __wrap___aeabi_drsub
00000007 T __wrap___aeabi_dsub
00000009 T __wrap___aeabi_i2d
00000001 T __wrap___aeabi_l2d
00000001 T __wrap___aeabi_ui2d
00000001 T __wrap___aeabi_ul2d
00000001 T __wrap_atan2
00000001 T __wrap_cos
00000001 T __wrap_exp
00000001 T __wrap_log
00000001 T __wrap_sin
0000000d T __wrap_sincos
00000001 T __wrap_sqrt
00000001 T __wrap_tan

double_init_rom.c.obj:
00000084 t $d
00000000 b $d
00000000 b $d
00000000 t $t
00000001 T __aeabi_double_init
         U double_table_shim_on_use_helper
         U memcpy
         U rom_data_lookup
         U rom_func_lookup
00000000 B sd_table
00000000 V sf_clz_func

double_math.c.obj:
0000026c t $d
00000168 t $d
00000150 t $d
00000040 t $d
00000054 t $d
00000094 t $d
000000ac t $d
0000008c t $d
00000050 t $d
0000004c t $d
00000028 t $d
00000054 t $d
00000054 t $d
0000005c t $d
00000094 t $d
0000006c t $d
00000050 t $d
0000009c t $d
00000010 t $d
00000010 t $d
00000010 t $d
00000010 t $d
00000010 t $d
00000098 t $d
000002f0 t $d
00000320 t $d
000001a8 t $d
000000ac t $d
00000178 t $d
00000294 t $d
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000310 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
         U __aeabi_d2iz
         U __aeabi_dadd
         U __aeabi_dcmpeq
         U __aeabi_dcmpge
         U __aeabi_dcmpgt
         U __aeabi_dcmple
         U __aeabi_ddiv
         U __aeabi_dmul
         U __aeabi_dsub
         U __aeabi_i2d
         U __aeabi_lmul
         U __aeabi_uidiv
         U atan2
         U cbrt
00000001 t dpow_0
00000001 t dpow_1
00000001 t dpowint_0
00000001 t dpow_int2
         U exp
         U exp2
         U fix642double
         U ldexp
         U log
         U pow
         U remquo
         U round
         U sqrt
00000001 T __wrap_acos
00000001 T __wrap_acosh
00000001 T __wrap_asin
00000001 T __wrap_asinh
00000001 T __wrap_atan
00000001 T __wrap_atanh
00000001 T __wrap_cbrt
00000001 T __wrap_ceil
00000001 T __wrap_copysign
00000001 T __wrap_cosh
00000001 T __wrap_drem
00000001 T __wrap_exp10
00000001 T __wrap_exp2
00000001 T __wrap_expm1
00000001 T __wrap_floor
00000001 T __wrap_fma
00000001 T __wrap_fmod
00000001 T __wrap_hypot
00000001 T __wrap_ldexp
00000001 T __wrap_log10
00000001 T __wrap_log1p
00000001 T __wrap_log2
00000001 T __wrap_pow
00000001 T __wrap_powint
00000001 T __wrap_remainder
00000001 T __wrap_remquo
00000001 T __wrap_round
00000001 T __wrap_sinh
00000001 T __wrap_tanh
00000001 T __wrap_trunc

double_v1_rom_shim.S.obj:
00000158 t $d
00000156 t $d
00000158 t $d
00000142 t $d
00000144 t $d
00000088 t $d
000000c0 t $d
000000c8 t $d
000001e0 t $d
00000092 t $d
00000094 t $d
00000150 t $d
00000158 t $d
00000036 t $d
00000038 t $d
00000058 t $d
0000006c t $d
000001a8 t $d
00000028 t $d
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000164 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
000000d8 t $t
00000000 t $t
0000009c t $t
00000007 t d2fix
00000023 W d2fix_a
000000ea t da_0
000000ac t da_1
000000a0 t da_2
000000be t da_3
000000b0 t da_4
000000e0 t da_5
000000da t da_6
000000d2 t da_7
0000007e t da_add
00000001 T dadd_shim
00000002 t da_entry
00000082 t da_pack
000000d9 T datan2_shim
00000074 t da_xgty0
00000154 t da_xmgty
000000fc t da_xrgty
0000011a t da_ygtx
00000126 t da_ygtx0
00000150 t da_ymgtx
00000132 t da_yrgtx
00000001 T dcordic_rot_step
00000001 T dcordic_vec_step
00000048 t dcos_finish
00000001 T dcos_shim
0000011e t dd_0
00000130 t dd_1
0000017e t dd_2
00000198 t dd_3
000001a2 t dd_4
00000194 t dd_5
00000002 t ddiv0
00000001 T ddiv_shim
00000000 a debug
00000001 T dexp_shim
00000078 a DIV_CSR
00000070 a DIV_QUOTIENT
00000060 a DIV_UDIVIDEND
00000064 a DIV_UDIVISOR
0000009d T dln_shim
00000134 t dm_0
0000014e t dm_1
0000012e t dm_2
00000001 T dmul_shim
00000003 T double2fix64_shim
00000003 T double2fix_shim
00000001 T double2float_shim
00000001 T double2int64_shim
00000001 T double2int_shim
00000003 T double2ufix64_shim
00000003 T double2ufix_shim
00000001 T double2uint64_shim
00000001 T double2uint_shim
00000001 T double_table_shim_on_use_helper
00000006 t dq_0
00000018 t dq_1
00000000 t dq_2
00000012 t dq_3
00000016 t dq_4
00000164 t dq_5
000000c8 t dreddata0
00000158 t dreddata1
0000015c t dreddata1_plus_4
00000001 T dreduce
0000014c t drsqrtapp
00000144 t drsqrtapp_minus_8
00000001 T drsub_shim
00000001 t dsincos_internal
00000001 T dsincos_shim
00000084 t dsin_finish
00000001 T dsin_shim
0000001d T dsqrt_shim
00000007 T dsub_shim
000001ec t dtab_cc
00000168 t dtab_exp
00000001 T dtan_shim
00000001 T dunpacks
0000000b T fix2double_shim
0000001b T fix642double_shim
00000009 T int2double_shim
00000019 T int642double_shim
d0000000 a IOPORT
00000018 t l12_1
00000022 t l12_2
0000003a t l13_1
00000044 t l13_2
00000066 t l14_1
0000008c t l15_1
000000b2 t l16_1
000000e0 t l17_1
00000018 t l20_1
00000022 t l20_2
00000098 t l21_1
000000c2 t l22_1
00000160 t l24_1
00000096 t l26_1
000000d4 t l27_1
00000016 t l60_1
00000022 t l60_2
00000030 t l60_3
00000064 t l72_1
000000a0 t l73_1
00000018 t l8_1
00000024 t l8_2
00000032 t l8_3
00000048 t l9_1
00000054 t l9_2
00000062 t l9_3
         U pop_r8_r11
         U push_r8_r11
0000001c t ret_dzero
         U sd_table
00000024 t uf2d
00000003 T ufix2double_shim
00000013 T ufix642double_shim
00000001 T uint2double_shim
00000011 T uint642double_shim
00000001 a use_hw_div

pico_int64_ops_aeabi.S.obj:
00000000 t $t
00000001 T __wrap___aeabi_lmul

float_aeabi.S.obj:
00000000 d $d
00000008 t $d
00000008 t $d
00000008 t $d
00000008 t $d
00000012 t $d
00000010 t $d
00000008 t $d
00000008 t $d
00000008 t $d
00000008 t $d
00000008 t $d
00000008 t $d
00000006 t $d
00000008 t $d
00000006 t $d
00000008 t $d
00000010 t $d
0000003e t $d
00000040 t $d
00000026 t $d
00000028 t $d
0000001c t $d
0000001c t $d
0000001a t $d
0000001c t $d
00000010 t $d
00000010 t $d
00000010 t $d
00000010 t $d
00000010 t $d
00000018 t $d
00000018 t $d
00000010 t $d
00000010 t $d
00000006 t $d
00000008 t $d
00000006 t $d
00000008 t $d
00000006 t $d
00000008 t $d
00000006 t $d
00000008 t $d
00000010 t $d
00000010 t $d
0000003e t $d
00000040 t $d
00000040 t $d
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
         U __aeabi_cfcmpeq
         U __aeabi_cfcmple
0000000e t __aeabi_cfcmple_guts
         U __aeabi_cfrcmple
         U __aeabi_f2uiz
         U __aeabi_float_init
         U __aeabi_i2f
0000000c t __aeabi_i2f_main
         U __aeabi_ui2f
         U fatan2_shim
0000003a t fdiv_fsub_nan_helper
00000020 t fdiv_save_state
0000001a t fdiv_shim_call
00000001 T fix2float
00000001 T fix642float
         U fix642float_shim
         U float2double_shim
00000001 T float2fix
00000001 T float2fix64
         U float2fix64_shim
         U float2fix_shim
00000001 T float2int
00000001 T float2int64
         U float2int64_shim
00000001 T float2int64_z
         U float2int_shim
00000001 T float2int_z
00000001 T float2ufix
00000001 T float2ufix64
         U float2ufix64_shim
         U float2uint64_shim
00000008 t ftan_in_range
00000030 t ftan_out_of_range
00000016 t ftan_save_state
00000010 t ftan_shim_call
         U int642float_shim
         U remainderf
         U sf_clz_func
         U sf_table
00000002 a SIO_DIV_CSR_DIRTY_SHIFT_FOR_CARRY
00000001 a SIO_DIV_CSR_READY_SHIFT_FOR_CARRY
00000001 T ufix2float
00000001 T ufix642float
         U ufix642float_shim
         U uint642float_shim
0000000d T __wrap___aeabi_cfcmpeq
0000000d T __wrap___aeabi_cfcmple
00000001 T __wrap___aeabi_cfrcmple
00000001 T __wrap___aeabi_f2d
00000001 T __wrap___aeabi_f2iz
00000001 T __wrap___aeabi_f2lz
00000001 T __wrap___aeabi_f2uiz
00000001 T __wrap___aeabi_f2ulz
0000000d T __wrap___aeabi_fadd
00000001 T __wrap___aeabi_fcmpeq
00000001 T __wrap___aeabi_fcmpge
00000001 T __wrap___aeabi_fcmpgt
00000001 T __wrap___aeabi_fcmple
00000001 T __wrap___aeabi_fcmplt
00000001 T __wrap___aeabi_fcmpun
00000013 T __wrap___aeabi_fdiv
0000003b T __wrap___aeabi_fmul
00000001 T __wrap___aeabi_frsub
00000007 T __wrap___aeabi_fsub
00000001 T __wrap___aeabi_i2f
00000005 T __wrap___aeabi_l2f
00000001 T __wrap___aeabi_ui2f
00000005 T __wrap___aeabi_ul2f
00000001 T __wrap_atan2f
00000001 T __wrap_cosf
00000001 T __wrap_expf
00000001 T __wrap_logf
00000001 T __wrap_sincosf
00000001 T __wrap_sinf
00000001 T __wrap_sqrtf
00000001 T __wrap_tanf

float_init_rom.c.obj:
00000050 t $d
00000000 b $d
00000000 b $d
00000000 t $t
00000001 T __aeabi_float_init
         U float_table_shim_on_use_helper
         U memcpy
         U rom_data_lookup
         U rom_func_lookup
00000000 V sf_clz_func
00000000 B sf_table

float_math.c.obj:
000000f0 t $d
000000f8 t $d
00000038 t $d
00000020 t $d
00000038 t $d
00000038 t $d
00000048 t $d
000000a4 t $d
00000068 t $d
00000044 t $d
00000018 t $d
00000010 t $d
00000018 t $d
00000010 t $d
00000018 t $d
00000018 t $d
00000088 t $d
0000018c t $d
00000098 t $d
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
         U __aeabi_d2f
         U __aeabi_dadd
         U __aeabi_dmul
         U __aeabi_dsub
         U __aeabi_f2d
         U __aeabi_f2iz
         U __aeabi_fadd
         U __aeabi_fcmpeq
         U __aeabi_fcmpgt
         U __aeabi_fdiv
         U __aeabi_fmul
         U __aeabi_fsub
         U __aeabi_i2f
         U __aeabi_uidiv
         U atan2f
         U cbrtf
         U exp
         U expf
         U fix2float
00000001 t fpow_0
00000001 t fpowint_0
00000001 t fpow_int2
         U log
         U logf
         U remquof
         U sqrt
         U sqrtf
00000001 T __wrap_acosf
00000001 T __wrap_acoshf
00000001 T __wrap_asinf
00000001 T __wrap_asinhf
00000001 T __wrap_atanf
00000001 T __wrap_atanhf
00000001 T __wrap_cbrtf
00000001 T __wrap_ceilf
00000001 T __wrap_copysignf
00000001 T __wrap_coshf
00000001 T __wrap_dremf
00000001 T __wrap_exp10f
00000001 T __wrap_exp2f
00000001 T __wrap_expm1f
00000001 T __wrap_floorf
00000001 T __wrap_fmaf
00000001 T __wrap_fmodf
00000001 T __wrap_hypotf
00000001 T __wrap_ldexpf
00000001 T __wrap_log10f
00000001 T __wrap_log1pf
00000001 T __wrap_log2f
00000001 T __wrap_powf
00000001 T __wrap_powintf
00000001 T __wrap_remainderf
00000001 T __wrap_remquof
00000001 T __wrap_roundf
00000001 T __wrap_sinhf
00000001 T __wrap_tanhf
00000001 T __wrap_truncf

float_v1_rom_shim.S.obj:
00000026 t $d
00000028 t $d
00000048 t $d
00000012 t $d
00000014 t $d
00000076 t $d
00000078 t $d
0000003e t $d
00000040 t $d
00000028 t $d
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
0000004a t d2f64_a
00000001 W d2fix_a
00000011 t f2fix
00000001 T fatan2_shim
00000015 T fix642float_shim
00000001 T float2double_shim
00000003 T float2fix64_shim
00000003 T float2fix_shim
00000001 T float2int64_shim
00000001 T float2int_shim
0000000d T float2ufix64_shim
0000000b T float2uint64_shim
00000001 T float_table_shim_on_use_helper
00000013 T int642float_shim
00000042 t ret_dzero
0000003c t ret_pop45
         U sf_table
00000003 T ufix642float_shim
00000001 T uint642float_shim

pico_malloc.c.obj:
00000000 r $d
0000001c t $d
0000001c t $d
0000001c t $d
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
         U panic
         U __real_calloc
         U __real_free
         U __real_malloc
         U __real_realloc
         U __StackLimit
00000001 T __wrap_calloc
00000001 T __wrap_free
00000001 T __wrap_malloc
00000001 T __wrap_realloc

mem_ops_aeabi.S.obj:
00000000 d $d
00000000 d $d
00000006 t $d
00000008 t $d
00000006 t $d
00000008 t $d
0000001e t $d
00000020 t $d
00000008 t $d
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 D aeabi_mem_funcs
00000010 D aeabi_mem_funcs_end
00000001 T __aeabi_mem_init
00000004 a MEMCPY
0000000c a MEMCPY4
00000004 a MEM_FUNC_COUNT
00000000 a MEMSET
00000008 a MEMSET4
         U rom_funcs_lookup
00000001 T __wrap___aeabi_memcpy
00000019 T __wrap___aeabi_memcpy4
00000019 T __wrap___aeabi_memcpy8
00000001 T __wrap___aeabi_memset
0000000d T __wrap___aeabi_memset4
0000000d T __wrap___aeabi_memset8
00000001 T __wrap_memcpy
00000001 T __wrap_memset

crt0.S.obj:
00000000 t $d
0000004c t $d
00000000 n $d
00000000 n $d
0000007e t $d
00000080 t $d
000000c0 t $t
00000000 t $t
00000074 t $t
         U __binary_info_end
00000000 r binary_info_header
         U __binary_info_start
         U __bss_end__
0000002c t bss_fill_loop
0000002e t bss_fill_test
         U __bss_start__
00000046 t data_cpy
00000042 t data_cpy_loop
0000004c t data_cpy_table
         U __data_end__
         U __data_start__
000000cc T __default_isrs_end
000000c0 T __default_isrs_start
00000001 T _entry_point
         U __etext
         U exit
00000800 a HeapSize
00000076 t hold_non_core0_in_bootrom
000000c5 W isr_hardfault
000000c1 W isr_invalid
000000cd W isr_irq0
000000cd W isr_irq1
000000cd W isr_irq10
000000cd W isr_irq11
000000cd W isr_irq12
000000cd W isr_irq13
000000cd W isr_irq14
000000cd W isr_irq15
000000cd W isr_irq16
000000cd W isr_irq17
000000cd W isr_irq18
000000cd W isr_irq19
000000cd W isr_irq2
000000cd W isr_irq20
000000cd W isr_irq21
000000cd W isr_irq22
000000cd W isr_irq23
000000cd W isr_irq24
000000cd W isr_irq25
000000cd W isr_irq26
000000cd W isr_irq27
000000cd W isr_irq28
000000cd W isr_irq29
000000cd W isr_irq3
000000cd W isr_irq30
000000cd W isr_irq31
000000cd W isr_irq4
000000cd W isr_irq5
000000cd W isr_irq6
000000cd W isr_irq7
000000cd W isr_irq8
000000cd W isr_irq9
000000c3 W isr_nmi
000000c9 W isr_pendsv
000000c7 W isr_svcall
000000cb W isr_systick
         U main
00000032 t platform_entry
0000000f t _reset_handler
         U rom_func_lookup
00000075 W runtime_init
         U __scratch_x_end__
         U __scratch_x_source__
         U __scratch_x_start__
         U __scratch_y_end__
         U __scratch_y_source__
         U __scratch_y_start__
00000800 a StackSize
         U __StackTop
000000cd T __unhandled_user_irq
000000d2 T unhandled_user_irq_num_in_r0
00000000 T __vectors
00000000 T __VECTOR_TABLE

new_delete.cpp.obj:
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
         U free
         U malloc
00000001 T _ZdaPv
00000001 T _ZdaPvj
00000001 T _ZdlPv
00000001 T _ZdlPvj
00000001 T _Znaj
00000001 T _Znwj

binary_info.c.obj:
00000000 r $d
00000000 r $d
00000000 r $d
00000000 r $d
00000000 r $d
00000000 r $d
00000000 r $d
00000000 r $d
00000000 r $d
00000000 r $d
00000000 r $d
00000018 r __bi_22
0000000c r __bi_30
00000000 r __bi_44
00000000 r __bi_50
00000000 r __bi_75
00000000 r __bi_81
00000000 r __bi_ptr22
00000000 r __bi_ptr30
00000000 r __bi_ptr44
00000000 r __bi_ptr50
00000000 r __bi_ptr75
00000000 r __bi_ptr81
         U __flash_binary_end

stdio.c.obj:
000000ac t $d
0000005c t $d
00000020 t $d
0000000c t $d
00000080 t $d
000000c0 t $d
00000080 t $d
000000c0 t $d
00000084 t $d
00000098 t $d
0000002c t $d
00000024 t $d
000000b4 t $d
00000070 t $d
00000088 t $d
00000008 t $d
0000002c t $d
00000000 r $d
00000000 d $d
00000000 b $d
00000000 b $d
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
         U at_the_end_of_time
         U busy_wait_us
00000001 W _close
00000000 r crlf_str.0
00000000 b drivers
00000000 b filter
00000001 W _fstat
00000001 T getchar_timeout_us
00000001 W _isatty
00000001 W _lseek
         U mutex_exit
         U mutex_try_enter_block_until
00000001 W _open
00000000 d print_mutex
00000001 T putchar_raw
00000001 T puts_raw
00000001 W _read
00000001 t stdio_buffered_printer
00000001 T stdio_filter_driver
00000001 T stdio_flush
00000001 T stdio_init_all
00000001 t stdio_out_chars_crlf
00000001 t stdio_out_chars_no_crlf
00000001 T stdio_set_chars_available_callback
00000001 T stdio_set_driver_enabled
00000001 T stdio_set_translate_crlf
         U stdio_uart_init
00000001 T stdout_serialize_begin
00000001 T stdout_serialize_end
         U strlen
         U time_us_64
         U vfctprintf
         U vprintf
00000001 T __wrap_getchar
00000001 T __wrap_printf
00000001 T __wrap_putchar
00000001 T __wrap_puts
00000001 T __wrap_vprintf
00000001 W _write

stdio_uart.c.obj:
00000040 t $d
00000088 t $d
0000001c t $d
00000078 t $d
00000034 t $d
0000002c t $d
0000002c t $d
00000034 t $d
00000000 r $d
00000000 r $d
00000000 r $d
00000000 r $d
00000000 r $d
00000000 r $d
00000000 r $d
00000000 d $d
00000000 r $d
00000000 r $d
00000000 r $d
00000000 r $d
00000000 r $d
00000000 r $d
00000000 b $d
00000000 b $d
00000000 b $d
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 t $t
00000000 r __bi_33.4
00000000 r __bi_34.5
00000000 r __bi_54.2
00000000 r __bi_58.3
00000000 r __bi_66.0
00000000 r __bi_70.1
00000000 r __bi_ptr33.11
00000000 r __bi_ptr34.10
00000000 r __bi_ptr54.9
00000000 r __bi_ptr58.8
00000000 r __bi_ptr66.7
00000000 r __bi_ptr70.6
00000000 b chars_available_callback
00000000 b chars_available_param
         U gpio_set_function
         U irq_remove_handler
         U irq_set_enabled
         U irq_set_exclusive_handler
00000001 t on_uart_rx
00000001 T stdin_uart_init
         U stdio_set_driver_enabled
00000000 D stdio_uart
00000001 T stdio_uart_in_chars
00000001 T stdio_uart_init
00000001 T stdio_uart_init_full
00000001 t stdio_uart_out_chars
00000001 t stdio_uart_set_chars_available_callback
00000001 T stdout_uart_init
         U uart_char_to_line_feed
         U uart_init
00000000 b uart_instance
